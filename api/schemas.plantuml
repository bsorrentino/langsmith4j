@startuml

title LangSmith Schemas Diagram

entity ChatCompletionChoice {
    index: Integer
    message: ChatCompletionResponseMessage
    finish_reason: String
}

entity ChatCompletionFunctionCall {
    name: String
    arguments: String
}

entity ChatCompletionFunctionParameters {
    type: String
    properties: Object
}

entity ChatCompletionFunctions {
    name: String
    description: String
    parameters: ChatCompletionFunctionParameters
}

entity ChatCompletionRequestMessage {
    role: String
    content: String
    name: String
    function_call: ChatCompletionFunctionCall
}

entity ChatCompletionResponseMessage {
    role: String
    content: String
    function_call: ChatCompletionFunctionCall
}

entity Choice {
    text: String
    index: Integer
    logprobs: Logprobs
    finish_reason: String
}

entity CompletionUsage {
    prompt_tokens: Integer
    completion_tokens: Integer
    total_tokens: Integer
}

entity CreateChatCompletionRequest {
    model: String
    messages: List<ChatCompletionRequestMessage>
    functions: List<ChatCompletionFunctions>
    temperature: BigDecimal
    top_p: BigDecimal
    n: Integer
    stream: Boolean
    stop: Stop
    max_tokens: Integer
    presence_penalty: BigDecimal
    frequency_penalty: BigDecimal
    logit_bias: Map
}

entity CreateChatCompletionResponse {
    id: String
    object: String
    created: Integer
    model: String
    choices: List<ChatCompletionChoice>
    usage: CompletionUsage
}

entity CreateCompletionRequest {
    * model: Model
    * prompt: Prompt
    suffix: String
    max_tokens: Integer
    temperature: BigDecimal
    top_p: BigDecimal
    n: Integer
    stream: Boolean
    logprobs: Integer
    echo: Boolean
    stop: Stop
    presence_penalty: BigDecimal
    frequency_penalty: BigDecimal
    best_of: Integer
    logit_bias: Map
    user: String
}

entity CreateCompletionResponse {
    id: String
    object: String
    created: String
    model: String
    choices: List<Choice>
    usage: CompletionUsage
}

entity HTTPValidationError {
    detail: List<ValidationError>
}

entity Inputs {
    * model: Model
    messages: List<ChatCompletionRequestMessage>
    functions: List<ChatCompletionFunctions>
    temperature: BigDecimal
    top_p: BigDecimal
    n: Integer
    stream: Boolean
    stop: Stop
    max_tokens: Integer
    presence_penalty: BigDecimal
    frequency_penalty: BigDecimal
    logit_bias: Map
    * prompt: Prompt
    suffix: String
    logprobs: Integer
    echo: Boolean
    best_of: Integer
    user: String
}

entity LocationInner {
}

entity Logprobs {
    tokens: List<String>
    token_logprobs: List<BigDecimal>
    top_logprobs: List<Map>
    text_offset: List<Integer>
}

entity Model {
}

entity ModelAnyOfValue {
}

entity Outputs {
    id: String
    object: String
    created: String
    model: String
    choices: List<Choice>
    usage: CompletionUsage
}

entity Prompt {
}

entity RunCreateSchema {
    * name: String
    inputs: Object
    * run_type: RunTypeEnum
    start_time: Date
    end_time: Date
    extra: Object
    error: String
    execution_order: Integer
    serialized: Object
    outputs: Object
    parent_run_id: UUID
    manifest_id: UUID
    events: List<Object>
    tags: List<String>
    id: UUID
    session_id: UUID
    session_name: String
    child_runs: List<RunCreateSchema>
    reference_example_id: UUID
}

entity RunCreateSchemaExtended {
    * name: String
    inputs: Inputs
    * run_type: RunTypeEnum
    start_time: Date
    end_time: Date
    extra: Object
    error: String
    execution_order: Integer
    serialized: Object
    outputs: Outputs
    parent_run_id: UUID
    manifest_id: UUID
    events: List<Object>
    tags: List<String>
    id: UUID
    session_id: UUID
    session_name: String
    child_runs: List<RunCreateSchema>
    reference_example_id: UUID
}

entity RunTypeEnum {
}

entity RunUpdateSchemaExtended {
    end_time: Date
    error: String
    inputs: Inputs
    outputs: Outputs
    events: List<Object>
}

entity Stop {
}

entity ValidationError {
    * loc: List<LocationInner>
    * msg: String
    * type: String
}


Choice -- Logprobs : logprobs
ChatCompletionRequestMessage -- ChatCompletionFunctionCall : function_call
ChatCompletionChoice -- ChatCompletionResponseMessage : message
CreateChatCompletionRequest -- "0..*" ChatCompletionRequestMessage : messages
CreateChatCompletionRequest -- "0..*" ChatCompletionFunctions : functions
CreateChatCompletionRequest -- Stop : stop
RunCreateSchema -- "0..*" RunCreateSchema : child_runs
ValidationError -- "0..*" LocationInner : loc
Inputs -- Model : model
Inputs -- "0..*" ChatCompletionRequestMessage : messages
Inputs -- "0..*" ChatCompletionFunctions : functions
Inputs -- Stop : stop
Inputs -- Prompt : prompt
CreateCompletionRequest -- Model : model
CreateCompletionRequest -- Prompt : prompt
CreateCompletionRequest -- Stop : stop
CreateChatCompletionResponse -- "0..*" ChatCompletionChoice : choices
CreateChatCompletionResponse -- CompletionUsage : usage
RunCreateSchemaExtended -- Inputs : inputs
RunCreateSchemaExtended -- Outputs : outputs
RunCreateSchemaExtended -- "0..*" RunCreateSchema : child_runs
CreateCompletionResponse -- "0..*" Choice : choices
CreateCompletionResponse -- CompletionUsage : usage
ChatCompletionFunctions -- ChatCompletionFunctionParameters : parameters
RunUpdateSchemaExtended -- Inputs : inputs
RunUpdateSchemaExtended -- Outputs : outputs
ChatCompletionResponseMessage -- ChatCompletionFunctionCall : function_call
HTTPValidationError -- "0..*" ValidationError : detail
Outputs -- "0..*" Choice : choices
Outputs -- CompletionUsage : usage

@enduml